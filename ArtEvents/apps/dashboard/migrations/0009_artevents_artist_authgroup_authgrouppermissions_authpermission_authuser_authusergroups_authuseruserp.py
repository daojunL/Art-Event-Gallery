# Generated by Django 3.0.5 on 2020-04-29 23:14

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('dashboard', '0008_auto_20200429_2301'),
    ]

    operations = [
        migrations.CreateModel(
            name='ArtEvents',
            fields=[
                ('eid', models.CharField(db_column='Eid', max_length=60, primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=60, null=True)),
                ('e_image', models.CharField(blank=True, max_length=200, null=True)),
                ('seatmap', models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                'db_table': 'Art_Events',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('aid', models.CharField(db_column='Aid', max_length=20, primary_key=True, serialize=False)),
                ('artist_name', models.CharField(blank=True, max_length=40, null=True)),
                ('info', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'Artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardArtist',
            fields=[
                ('aid', models.CharField(db_column='Aid', max_length=20, primary_key=True, serialize=False)),
                ('artist_name', models.CharField(max_length=20)),
                ('info', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'dashboard_artist',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardExhibition',
            fields=[
                ('eid', models.CharField(db_column='Eid', max_length=20, primary_key=True, serialize=False)),
                ('background', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'dashboard_exhibition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardHeld',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eid', models.CharField(db_column='Eid', max_length=20)),
                ('lid', models.CharField(db_column='Lid', max_length=20)),
            ],
            options={
                'db_table': 'dashboard_held',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardLocation',
            fields=[
                ('lid', models.CharField(db_column='Lid', max_length=20, primary_key=True, serialize=False)),
                ('longitude', models.CharField(max_length=20)),
                ('latitude', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=20)),
                ('zipcode', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'dashboard_location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardPerform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('eid', models.CharField(db_column='Eid', max_length=20)),
                ('aid', models.CharField(db_column='Aid', max_length=20)),
            ],
            options={
                'db_table': 'dashboard_perform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardTheater',
            fields=[
                ('eid', models.CharField(db_column='Eid', max_length=20, primary_key=True, serialize=False)),
                ('genre', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'dashboard_theater',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DashboardTime',
            fields=[
                ('time_serial', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('date', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'dashboard_time',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('lid', models.CharField(db_column='Lid', max_length=20, primary_key=True, serialize=False)),
                ('longitude', models.CharField(blank=True, max_length=30, null=True)),
                ('latitude', models.CharField(blank=True, max_length=30, null=True)),
                ('address', models.CharField(blank=True, max_length=80, null=True)),
                ('zipcode', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('pid', models.CharField(db_column='Pid', max_length=20, primary_key=True, serialize=False)),
                ('address', models.CharField(blank=True, max_length=200, null=True)),
                ('fname', models.CharField(blank=True, max_length=50, null=True)),
                ('lname', models.CharField(blank=True, max_length=50, null=True)),
                ('ticket_num', models.CharField(blank=True, max_length=20, null=True)),
                ('total_price', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('sid', models.CharField(db_column='Sid', max_length=100, primary_key=True, serialize=False)),
                ('email', models.CharField(blank=True, max_length=100, null=True)),
                ('s_name', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'db_table': 'Subscription',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TicketHas',
            fields=[
                ('tid', models.CharField(db_column='Tid', max_length=20, primary_key=True, serialize=False)),
                ('price', models.IntegerField(blank=True, null=True)),
                ('amount', models.IntegerField(blank=True, null=True)),
                ('refund_policy', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Ticket_has',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Time',
            fields=[
                ('time_serial', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('date_ymd', models.CharField(blank=True, db_column='date_YMD', max_length=20, null=True)),
            ],
            options={
                'db_table': 'Time',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Buy',
            fields=[
                ('pid', models.OneToOneField(db_column='Pid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.Payment')),
            ],
            options={
                'db_table': 'buy',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Concert',
            fields=[
                ('eid', models.OneToOneField(db_column='Eid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.ArtEvents')),
                ('concert_type', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Concert',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Exhibition',
            fields=[
                ('eid', models.OneToOneField(db_column='Eid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.ArtEvents')),
                ('background', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Exhibition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Held',
            fields=[
                ('eid', models.OneToOneField(db_column='Eid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.ArtEvents')),
            ],
            options={
                'db_table': 'held',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Perform',
            fields=[
                ('eid', models.OneToOneField(db_column='Eid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.ArtEvents')),
            ],
            options={
                'db_table': 'Perform',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Theater',
            fields=[
                ('eid', models.OneToOneField(db_column='Eid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.ArtEvents')),
                ('genre', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'Theater',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TOn',
            fields=[
                ('eid', models.OneToOneField(db_column='Eid', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='dashboard.ArtEvents')),
            ],
            options={
                'db_table': 'T_on',
                'managed': False,
            },
        ),
    ]
